name: Run Cypress Cloud E2E Tests
on:
  schedule:
    - cron: '30 21,23 * * 0,1,2,3,4'
  workflow_dispatch:
    inputs:
      environment_name:
        description: 'Select Environment'
        type: choice
        options:
          - blitzv2
          - stagev2
          - sandboxv2
          - production
        default: blitzv2
        required: true
      test_type:
        description: 'Select Test Type'
        type: choice
        options:
          - Smoke
          - Regression
          - Sanity
        default: Regression
        required: true
      cloud_record:
        description: 'Cypress cloud record'
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'true'
      test_options:
        description: 'Provide test options in the JSON string'
        type: string
        default: '{"parent_account_admin":true,"account_admin":true,"workspace_admin":true,"vault_creator":true,"vault_owner":true,"function_admin":true,"connection_manager":true,"schema_validation":true}'
      browser:
        description: 'Select Browser'
        type: choice
        options:
          - chrome
          - firefox
          - chromium
          - edge
        default: chrome

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set-default.outputs.env_name }}
    steps:
      - name: Set default environment name
        id: set-default
        run: |
          current_hour=$(date +"%H")
          echo "Hour Now: $current_hour"
          if [ "$current_hour" = "21" ]; then
            echo "env_name=blitzv2" >> $GITHUB_ENV
          elif [ "$current_hour" = "23" ]; then
            echo "env_name=stagev2" >> $GITHUB_ENV
          else
            echo "env_name=${{ github.event.inputs.environment_name }}" >> $GITHUB_ENV
          fi
          echo "Github Output: ${{ env.env_name }}"


  calculate-containers-count:
    runs-on: ubuntu-latest
    outputs:
      default_containers: ${{ steps.set-default.outputs.default_containers }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
    
      - name: Set default containers
        id: set-default
        run: |
          cloud_record=${{ github.event.inputs.cloud_record || 'true' }}
    
          if [[ "$cloud_record" == "true" && ("${{ github.event.inputs.environment_name }}" == "production" || "${{ github.event.inputs.environment_name }}" == "prod") ]]; then
            regions=$(cat cypress/sanity-test-config.json)
            echo "Regions: $regions"
            default_containers=$(echo "$regions" | jq -c '[.regions[] | {workspace_id: .workspace_id, vault_id: .vault_id, display_name: .display_name, data_plane_url: .data_plane_url, workspace_url: .workspace_url, run_create_function_tests: .run_create_function_tests}]')
            echo "default_containers=$default_containers" >> $GITHUB_ENV
            
          elif [[ "$cloud_record" == "true" || "${{ github.event_name }}" == "schedule" ]]; then
            echo "default_containers=[1, 2, 3, 4, 5]" >> $GITHUB_ENV
    
          else
            echo "default_containers=[1]" >> $GITHUB_ENV
          fi

  dryrun-matrix:
    needs: calculate-containers-count
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: ${{ fromJson(needs.calculate-containers-count.outputs.default_containers) }}
    steps:
      - name: Check if JSON file exists
        run: |
          if [ ! -f cypress/cypress.env.json ]; then
            echo "File cypress/cypress.env.json does not exist. Creating..."
            mkdir -p cypress
          fi

      - name: Update cypress.env.json
        if: ${{ needs.calculate-containers-count.outputs.default_containers != '[]' && github.event.inputs.test_type == 'Sanity' && github.event.inputs.environment_name == 'production' }}
        run: |
          echo "{
            \"WORKSPACE_ID\": \"${{ matrix.container.workspace_id }}\",
            \"QUICKSTART_VAULT_ID\": \"${{ matrix.container.vault_id }}\",
            \"WORKSPACE_URL\": \"${{ matrix.container.workspace_url }}\",
            \"REGION_DISPLAY_NAME\": \"${{ matrix.container.display_name }}\"
          }" > cypress/cypress.env.json

      - name: Print updated cypress.env.json
        run: cat cypress/cypress.env.json
        
      - name: Log Matrix Combinations
        run: |
          echo "WORKSPACE_ID: $WORKSPACE_ID (Type: $(echo $WORKSPACE_ID | jq -R 'type'))"
          echo "QUICKSTART_VAULT_ID: $QUICKSTART_VAULT_ID (Type: $(echo $QUICKSTART_VAULT_ID | jq -R 'type'))"
          echo "WORKSPACE_URL: $WORKSPACE_URL (Type: $(echo $WORKSPACE_URL | jq -R 'type'))"
          echo "run_create_function_tests: $run_create_function_tests (Type: $(echo $run_create_function_tests | jq -R 'type'))"
          echo "Dry-run: Processing combination:"
          echo "  Workspace ID: ${{ matrix.container.workspace_id }}"
          echo "  Vault ID: ${{ matrix.container.vault_id }}"
          echo "  Display Name: ${{ matrix.container.display_name }}"
          echo "  Run Create Function Test: ${{ matrix.container.run_create_function_tests }}"
