name: Run Cypress Cloud E2E Tests

on:
  schedule:
    - cron: '30 21,23 * * 0,1,2,3,4'
  workflow_dispatch:
    inputs:
      environment_name:
        description: 'Select Environment'
        type: choice
        options:
          - blitzv2
          - stagev2
          - sandboxv2
          - production
        default: blitzv2
        required: true
      test_type:
        description: 'Select Test Type'
        type: choice
        options:
          - Smoke
          - Regression
          - Sanity
        default: Regression
        required: true
      cloud_record:
        description: 'Cypress cloud record'
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'true'
      test_options:
        description: 'Provide test options in the JSON string'
        type: string
        default: '{"parent_account_admin":true,"account_admin":true,"workspace_admin":true,"vault_creator":true,"vault_owner":true,"function_admin":true,"connection_manager":true,"schema_validation":true}'
      browser:
        description: 'Select Browser'
        type: choice
        options:
          - chrome
          - firefox
          - chromium
          - edge
        default: chrome

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set-default.outputs.env_name }}
    steps:
      - name: Set default environment name
        id: set-default
        run: |
          current_hour=$(date +"%H")
          echo "Hour Now: "$current_hour
          if [[ "$current_hour" = "21" ]]; then
            echo "env_name=blitzv2" >> $GITHUB_OUTPUT
          elif [[ "$current_hour" = "23" ]]; then
            echo "env_name=stagev2" >> $GITHUB_OUTPUT
          else
            echo "env_name=${{ github.event.inputs.environment_name }}" >> $GITHUB_OUTPUT
          fi
          echo "Github Output: "$GITHUB_OUTPUT

  calculate-containers-count:
    runs-on: ubuntu-latest
    outputs:
      default_containers: ${{ steps.set-default.outputs.default_containers }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
    
      - name: Set default containers
        id: set-default
        run: |
          cloud_record=${{ github.event.inputs.cloud_record || 'true' }}
    
          if [[ "$cloud_record" == "true" && ("${{ github.event.inputs.environment_name }}" == "production" || "${{ github.event.inputs.environment_name }}" == "prod") ]]; then
            regions=$(cat cypress/sanity-test-config.json)
            echo "Regions: $regions"
            default_containers=$(echo "$regions" | jq -c '[.regions[] | {workspace_id: .workspace_id, vault_id: .vault_id, display_name: .display_name, data_plane_url: .data_plane_url, workspace_url: .workspace_url, run_create_function_tests: .run_create_function_tests}]')
            echo "default_containers=$default_containers" >> $GITHUB_OUTPUT
            
          elif [[ "$cloud_record" == "true" || "${{ github.event_name }}" == "schedule" ]]; then
            echo "default_containers=[1, 2, 3, 4, 5]" >> $GITHUB_OUTPUT
    
          else
            echo "default_containers=[1]" >> $GITHUB_OUTPUT
          fi
          echo "Final Default Containers: $default_containers"

  modify-cypress-env:
    needs: calculate-containers-count
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers: ${{ fromJson(needs.calculate-containers-count.outputs.default_containers) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Store env as file
        run: |
          region_workspace_id="${{ matrix.containers.workspace_id }}"
          region_vault_id="${{ matrix.containers.vault_id }}"
          region_workspace_url="${{ matrix.containers.workspace_url }}"
          region_display_name="${{ matrix.containers.display_name }}"
          
          jq --arg workspace_id "$region_workspace_id" \
             --arg vault_id "$region_vault_id" \
             --arg workspace_url "$region_workspace_url" \
             --arg display_name "$region_display_name" \
             '.APP_URL = ($workspace_url + "/app") | 
              .WORKSPACE_ID = $workspace_id | 
              .QUICKSTART_VAULT_ID = $vault_id | 
              .WORKSPACE_URL = $workspace_url | 
              .REGION_DISPLAY_NAME = $display_name' \
             ./cypress/cypress.env.json > ./cypress/cypress.env.json.tmp

          mv ./cypress/cypress.env.json.tmp ./cypress/cypress.env.json

      - name: Print Cypress Env Values
        run: |
          echo "Cypress env values:"
          jq '.' ./cypress/cypress.env.json
