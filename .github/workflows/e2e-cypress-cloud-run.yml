name: blitz-deploy

on:
  push:
    branches: [master]

jobs:
  check-codebase-changes:
    name: Check for the changes in codebase
    runs-on: ubuntu-latest
    outputs:
      core_folder_changes: ${{ steps.check_core_folder_changes.outputs.core_folder_changes }}
      changes_in_app: ${{ steps.check_core_folder_changes.outputs.changes_in_app }}
      changes_in_beffe: ${{ steps.check_core_folder_changes.outputs.changes_in_beffe }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history in case if the merge made with out squash
      - name: Get Previous Commit SHA
        id: get_previous_commit
        run: |
          PREVIOUS_COMMIT=$(git rev-parse HEAD~1)
          echo "PREVIOUS_COMMIT=$PREVIOUS_COMMIT" >> $GITHUB_ENV
      - name: List changed files
        run: |
          MERGE_COMMIT=$GITHUB_SHA
          PREVIOUS_COMMIT=$PREVIOUS_COMMIT
          git diff --name-only $PREVIOUS_COMMIT $MERGE_COMMIT > changed_files.txt
          ls -l changed_files.txt
          cat changed_files.txt

      - name: Check for core folder changes
        id: check_core_folder_changes
        run: |
          if grep -q -E '^app_test/|^cypress/' changed_files.txt; then
            echo "core_folder_changes=false" >> $GITHUB_OUTPUT
          else
            echo "core_folder_changes=true" >> $GITHUB_OUTPUT
          fi
          if grep -q '^app/' changed_files.txt; then
             echo "changes_in_app=true" >> $GITHUB_OUTPUT
          else
             echo "changes_in_app=false" >> $GITHUB_OUTPUT
          fi
          if grep -qE '^cypress/|^vault-beffe/' changed_files.txt; then
             echo "changes_in_beffe=true" >> $GITHUB_OUTPUT
          else
             echo "changes_in_beffe=false" >> $GITHUB_OUTPUT
          fi
      - name: Debug Outputs
        run: |
           echo "core_folder_changes=${{ steps.check_core_folder_changes.outputs.core_folder_changes }}"
           echo "changes_in_app=${{ steps.check_core_folder_changes.outputs.changes_in_app }}"
           echo "changes_in_beffe=${{ steps.check_core_folder_changes.outputs.changes_in_beffe }}"

  build-app:
    runs-on: ubuntu-latest
    needs: [check-codebase-changes]
    if: ${{ needs.check-codebase-changes.outputs.core_folder_changes == 'true' }}
    steps:
      - name: Build App
        run: echo "build-app step ran"

  build-data-beffe:
    runs-on: ubuntu-latest
    needs: [check-codebase-changes]
    if: ${{ needs.check-codebase-changes.outputs.core_folder_changes == 'true' }}
    steps:
      - name: Build Data Beffe
        run: echo "build-data-beffe step ran"

  build-beffe-tests:
    runs-on: ubuntu-latest
    needs: [check-codebase-changes]
    if: ${{ needs.check-codebase-changes.outputs.core_folder_changes == 'true' }}
    steps:
      - name: Build Beffe Tests
        run: echo "build-beffe-tests step ran"

  run-cypress-karate-smoke-tests:
    runs-on: ubuntu-latest
    needs: [build-app, build-data-beffe, build-beffe-tests, check-codebase-changes]
    if: ${{ needs.check-codebase-changes.outputs.changes_in_app == 'true' || needs.check-codebase-changes.outputs.changes_in_beffe == 'true' }}
    steps:
      - name: Check Cypress test results
        id: check_cypress_results
        if: ${{ (failure() || success()) && needs.check-codebase-changes.outputs.changes_in_app == 'true' }}
        run: echo "CYPRESS_TESTS_PASSED=true" >> $GITHUB_ENV

      - name: Upload Cypress Test Reports as Artifacts
        if: ${{ (failure() || success()) && needs.check-codebase-changes.outputs.changes_in_app == 'true' && env.CYPRESS_TESTS_PASSED == 'false' }}
        run: echo "Uploading Cypress Test Reports"

  make-tag: 
    runs-on: ubuntu-latest
    needs: [check-codebase-changes]
    steps:
      - name: Make Tag
        run: echo "make tag run"
